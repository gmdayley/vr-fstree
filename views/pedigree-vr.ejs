<%- include('partials/header') %>
<script src="https://aframe.io/releases/0.7.0/aframe.min.js"></script>
<script src="//cdn.rawgit.com/donmccurdy/aframe-extras/v3.12.3/dist/aframe-extras.min.js"></script>
<script src="https://unpkg.com/aframe-html-shader@0.2.0/dist/aframe-html-shader.min.js"></script>
<script src="https://unpkg.com/aframe-look-at-component@0.6.0/dist/aframe-look-at-component.min.js"></script>

<%
/*
import math, random

def fibonacci_sphere(samples=1,randomize=True):
  rnd = 1.
  if randomize:
      rnd = random.random() * samples

  points = []
  offset = 2./samples
  increment = math.pi * (3. - math.sqrt(5.));

  for i in range(samples):
      y = ((i * offset) - 1) + (offset / 2);
      r = math.sqrt(1 - pow(y,2))

      phi = ((i + rnd) % samples) * increment

      x = math.cos(phi) * r
      z = math.sin(phi) * r

      points.append([x,y,z])

  return points
 */

  var data = new Data();

  function Data()
  {
    this.entries = new Array();

    this.addEntry = function(e)
    {
      this.entries.push(e);
    }
  }

  function Entry()
  {
    this.lat = 0;
    this.lon = 0;
  }

  function genRandEntries(n)
  {
    for (var i = 0; i < n; i++)
    {
      var e = new Entry();
      data.addEntry(e);
    }
  }

  function arrangeEntries(e)
  {
    var p = e.length;
    var N = (p - 1) / 2;

    for (var i = -N; i <= N; i++)
    {
      e[i + N].lat = Math.asin((2 * i) / (2 * N + 1));
      e[i + N].lon = mod(i, 1.6180339887498948482045868343656) * 3.8832220774509331546937312599254;
    }
  }

  function mod(a, b)
  {
    return a - Math.floor(a / b) * b;
  }

  function render(e)
  {
    var width=100, height = 100;
    var offsetX = Math.floor(width  / 2);
    var offsetY = Math.floor(height / 2);

    var r = Math.min(width, height) * 0.4;

    var  coords = []
    for (var i = 0; i < e.length; i++)
    {
      var x = Math.cos(e[i].lat) * Math.sin(e[i].lon);
      var y = Math.sin(e[i].lat) * Math.sin(e[i].lon);
      var z = Math.cos(e[i].lon);

      z += 1;
      z /= 2;
      z *= 0.9;
      z += 0.1;

      console.log("[" + e[i].lat + "," + e[i].lon + "] ==> [" + x + "," + y + "," + z + "]");
      coords.push([x, y, z]);
    }
    return coords;
  }

  genRandEntries(512);
  arrangeEntries(data.entries);
  var coords = render(data.entries);
%>

<a-scene universal-controls wasd-controls>
  <a-box color="blue"></a-box>

  <!--<%- include('partials/person-vr', {person: ancestry['7'], position: 7}) %>-->
  <!--<%- include('partials/person-vr', {person: ancestry['6'], position: 6}) %>-->
  <!--<%- include('partials/person-vr', {person: ancestry['5'], position: 5}) %>-->
  <!--<%- include('partials/person-vr', {person: ancestry['4'], position: 4}) %>-->
  <!--<%- include('partials/person-vr', {person: ancestry['3'], position: 3}) %>-->
  <!--<%- include('partials/person-vr', {person: ancestry['2'], position: 2}) %>-->
  <!--<%- include('partials/person-vr', {person: ancestry['1'], position: 1}) %>-->

  <%
    var keys = Object.keys(ancestry)
  for(var i = 0; i < keys.length; i++) {
    var pos = ancestry.length*2 / 2;
  %>
  <%- include('partials/person-vr', {person: ancestry[keys[i]], position: i+1 }) %>
  <% } %>

  <!--<h3>Children</h3>-->
  <!--<div class="children">-->
    <% for(var i = 0; i < children.length; i++) {
        var pos = children.length*2 / 2;
    %>
      <%- include('partials/child-vr', {person: children[i], position: pos - i*2 }) %>
    <% } %>
  <!--</div>-->

  <% for(var i = 0; i < coords.length; i++) {
    var radius=30
    var pos = `${coords[i][0]*radius} ${coords[i][1]*radius} ${coords[i][2]*radius}`
  %>
   <a-sphere radius=".1" position="<%= pos %>" color="red"></a-sphere>
  <% } %>

  <!-- Floor -->
  <!--<a-entity static-body="" geometry="primitive: plane; height: 5000; width: 5000" position="0 -0.5 -5"-->
            <!--rotation="-90 0 0" material="shader: flat; src: url(/images/floor.png); repeat: 2001 2001"></a-entity>-->
  <!-- Lighting and Background -->
  <a-sky color="#000" radius="5000" material="color:#000;shader:flat"
         geometry="primitive:sphere;radius:5000;segmentsWidth:64;segmentsHeight:64" scale="-1 1 1"></a-sky>
  <a-entity light="color:#fff;type:ambient" data-aframe-default-light=""></a-entity>
  <a-entity light="color:#fff;intensity:0.2" position="-1 2 1" data-aframe-default-light=""></a-entity>
  <a-camera></a-camera>
</a-scene>

<script>
  // Instead of making the person squares clickable by wrapping them in <a> tags
  // and committing a great sin of rendering block content in an inline element,
  // we just listen for the click event on them and manually perform the
  // navigation.
  Array.from(document.querySelectorAll('.person:not(.missing)')).forEach(function($person){
    $person.addEventListener('click', function(){
      window.location.href = '/pedigree/' + $person.dataset.pid;
    });
  });
</script>
  
<%- include('partials/footer') %>